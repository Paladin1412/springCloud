server:
  port: 2003
spring:
  application:
    name: seata-storage-service
  cloud:
    nacos:
      discovery:
        server-addr: 47.107.108.246:1111
    alibaba:
      seata:
        tx-service-group: my_test_tx_group

  datasource:
    #   数据源基本配置
    username: root
    password: Lx147258369@@@@
    #Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.
    #
    #问题原因： 
    #    升级后的mysql驱动类，Driver位置由com.mysql.jdbc.Driver 变为com.mysql.cj.jdbc.Driver 
    driver-class-name: com.mysql.cj.jdbc.Driver
    #5.7版本的数据，由于加固的安全模块，需要加useSSL=false这个，不然会抛出异常
    url: jdbc:mysql://47.107.108.246:3306/seata_storage?useUnicode=true&characterEncoding=utf-8&useSSL=false
    #指定数据源类型 默认是org.apache.tomcat.jdbc.pool.DataSource    查看这个DataSourceConfiguration就会明白；
    type: com.alibaba.druid.pool.DruidDataSource
    #   数据源其他配置， 显示为黄色字体表示DataSourceProperties里面没有这些属性，需要创建一个DruidDataSource，并注入到容器；
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters:
      commons-log:
        connection-logger-name: stat,wall,slf4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      #运行Sql文件在数据库中创建表（每次启动就创建）  查看这个类就明白为什么这么写：DataSourceInitializer
      #schema:
      #  - classpath:sql/User.sql
    #  - classpath:sql/good.sql
    # 运行sql文件在表中添加数据
    #data:
    # - classpath:sql/User.sql
    # - classpath:sql/good.sql
    profiles:
      active: dev

# 设置feign客户端超时时间(OpenFeign默认支持ribbon)
ribbon:
  #在com.netflix.client.config.DefaultClientConfigImpl#getProperty(java.lang.String)方法里面，会读取配置文件中配置的ribbon的超时时间，
  #优先使用 服务名.ribbon.ReadTimeout这个配置，如果没有则使用ribbon.ReadTimeout，
  #还没有则使用默认值, ps:ribbon.ReadTimeout和ribbon.ConnectTimeout的默认值都是1000毫秒，
  #连接超时设置1秒钟还好，ReadTimeout一秒钟太短了，需要加大点，不过也要按需调整。
  # 指的是建立连接后从服务器读取到可用资源所用的时间
  ReadTimeout: 5000
  # 指的是建立连接所用的时间,适用于网络状态正常的情况下,两端连接所用的时间
  #ConnectTimeout: 5000

feign:
  hystrix:
    enabled: false
logging:
  level:
    io:
      seata: info
#SpringBoot的Endpoint主要是用来监控应用服务的运行状况，并集成在Mvc中提供查看接口
management:
  endpoints:
    web:
      exposure:
        include: "*" #暴露所有接口

#Mybatis
mybatis:
  #在Eclipse中到dao文件与mapper.xml文件只要在同一级目录下即可，但是在IDEA中，mapper.xml要放在resources目录下
  mapper-locations: classpath*:mybatis/mapper/*Mapper.xml
  type-aliases-package: com.lv.cloud.entity #别名扫描
  config-location: classpath:mybatis/mybatisConfig.xml